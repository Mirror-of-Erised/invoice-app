from __future__ import annotations
from typing import Protocol, Iterable, Optional
from datetime import date
from app.db.models.organization import Organization
from app.db.models.customer import Customer
from app.db.models.invoice import Invoice, InvoiceStatus
from app.db.models.invoice_line_item import InvoiceLineItem

class OrganizationRepo(Protocol):
    def create(self, name: str, email: str | None = None) -> Organization: ...
    def get(self, org_id: int) -> Optional[Organization]: ...
    def by_name(self, name: str) -> Optional[Organization]: ...
    def list(self) -> Iterable[Organization]: ...

class CustomerRepo(Protocol):
    def create(self, organization_id: int, name: str, email: str | None = None, phone: str | None = None, billing_address: str | None = None) -> Customer: ...
    def get(self, customer_id: int) -> Optional[Customer]: ...
    def list_by_org(self, organization_id: int) -> Iterable[Customer]: ...

class InvoiceRepo(Protocol):
    def create(self, organization_id: int, customer_id: int, number: str, issue_date: date, due_date: date | None = None) -> Invoice: ...
    def get(self, invoice_id: int) -> Optional[Invoice]: ...
    def by_number(self, number: str) -> Optional[Invoice]: ...
    def set_status(self, invoice_id: int, status: InvoiceStatus) -> Invoice: ...

class InvoiceLineItemRepo(Protocol):
    def add_item(self, invoice_id: int, description: str, quantity: int, unit_price: float) -> InvoiceLineItem: ...
